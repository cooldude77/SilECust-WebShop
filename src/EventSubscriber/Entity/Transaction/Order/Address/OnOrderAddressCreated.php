<?php

namespace Silecust\WebShop\EventSubscriber\Entity\Transaction\Order\Address;

use Doctrine\Bundle\DoctrineBundle\Attribute\AsEntityListener;
use Doctrine\ORM\Event\PostPersistEventArgs;
use Doctrine\ORM\Events;
use Silecust\WebShop\Entity\CustomerAddress;
use Silecust\WebShop\Entity\OrderAddress;
use Symfony\Component\Serializer\SerializerInterface;

#[AsEntityListener(event: Events::postPersist, method: 'postPersist', entity: OrderAddress::class)]
readonly class OnOrderAddressCreated
{

    public function __construct(private SerializerInterface $serializer)
    {
    }

    /**
     * @param OrderAddress $orderAddress
     * @param PostPersistEventArgs $event
     * @return void
     *
     * Here the id for even a new record is already generated by the database
     */
    public function postPersist(OrderAddress $orderAddress, PostPersistEventArgs $event): void
    {
        if ($orderAddress->getShippingAddress() != null)
            if ($orderAddress->getShippingAddress()->getAddressType() == CustomerAddress::ADDRESS_TYPE_SHIPPING) {
                $json = $this->serializer->serialize($orderAddress->getShippingAddress(), 'json');
                $q = $event->getObjectManager()->createQueryBuilder()
                    ->update(OrderAddress::class, 'oa')
                    ->set('oa.shippingAddressInJson', ":json")
                    ->where()
                    ->setParameter("json", $json)
                    ->where('oa=:address')
                    ->setParameter('address', $orderAddress)
                    ->getQuery();

                $q->execute();
            }

        if ($orderAddress->getBillingAddress() != null)
            if ($orderAddress->getBillingAddress()->getAddressType() == CustomerAddress::ADDRESS_TYPE_BILLING)
                $json = $this->serializer->serialize($orderAddress->getBillingAddress(), 'json');
        $q = $event->getObjectManager()->createQueryBuilder()
            ->update(OrderAddress::class, 'oa')
            ->set('oa.billingAddressInJson', ":json")
            ->where()
            ->setParameter("json", $json)
            ->where('oa=:address')
            ->setParameter('address', $orderAddress)
            ->getQuery();

        $q->execute();
    }
}