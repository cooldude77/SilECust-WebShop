<?php

namespace Silecust\WebShop\EventSubscriber\Admin\Employee\Customer\Address;

use Doctrine\Bundle\DoctrineBundle\Attribute\AsEntityListener;
use Doctrine\ORM\Event\PostPersistEventArgs;
use Doctrine\ORM\Events;
use Silecust\WebShop\Entity\CustomerAddress;
use Silecust\WebShop\Repository\CustomerAddressRepository;

#[AsEntityListener(event: Events::postPersist, method: 'postPersist', entity: CustomerAddress::class)]
readonly class OnAddressCreated
{

    public function __construct(private readonly CustomerAddressRepository $customerAddressRepository)
    {
    }

    /**
     * @param CustomerAddress $customerAddress
     * @param PostPersistEventArgs $event
     * @return void
     *
     * Here the id for even a new record is already generated by the database
     */
    public function postPersist(CustomerAddress $customerAddress, PostPersistEventArgs $event): void
    {
        $this->customerAddressRepository->setDefaultAddressForAddressNotIn($customerAddress);
    }
}